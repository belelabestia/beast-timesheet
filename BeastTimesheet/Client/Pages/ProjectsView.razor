@page "/"
@page "/projects"
@using BeastTimesheet.Shared.Model
@inject HttpClient http
@inject NavigationManager nav

<MainTemplate>
    <Header>Projects</Header>
    <Toolbar>
        @if (creating)
        {
            <p>Creating...</p>
        }
        else
        {
            <button @onclick="Create">Create project</button>
        }
    </Toolbar>
    <Main>
        @if (projects is null)
        {
            <p>Loading...</p>
        }
        else
        {
            @if (!projects.Any())
            {
                <div class="grid center fill">
                    <div class="grid gap">
                        <p>Nothing to show here.</p>
                        @if (creating)
                        {
                            <p>Creating...</p>
                        }
                        else
                        {
                            <button @onclick="Create">Create project</button>
                        }
                    </div>
                </div>
            }
            else
            {
                <ul>
                    @foreach (var project in projects)
                    {
                        <li class="pad">
                            <NavLink href="@($"projects/{project.Id}")">
                                @(project.Name is not "" ? project.Name : "Draft - #" +
                                    project.Id)
                            </NavLink>
                        </li>
                    }
                </ul>
            }
        }
    </Main>
</MainTemplate>

@code {
    IEnumerable<Project>? projects;
    bool creating;

    protected override async Task OnInitializedAsync()
    {
        projects = await http.GetFromJsonAsync<IEnumerable<Project>>("api/Projects");
    }

    async Task Create()
    {
        creating = true;
        var res = await http.PostAsJsonAsync("api/Projects", new Project());
        var project = await res.Content.ReadFromJsonAsync<Project>();
        nav.NavigateTo($"projects/{project!.Id}");
    }
}

