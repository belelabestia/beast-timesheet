@using System.Net
@inject HttpClient http
@inject Auth auth

<div class="grid center" @onkeypress="OnKey">
    <div>
        <h1>Login</h1>
        <p>Insert key</p>
        <input type="password" @ref="inputReference" @bind="input" @bind:event="oninput">
        <button @onclick="OnConfirm">Confirm</button>
        <p class="error" style="visibility: @errorVisibility">Login failed!</p>
    </div>
</div>

@code {
    [Parameter]
    public ElementReference inputReference { get; set; }
    string? input;
    string errorVisibility = "hidden";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await inputReference.FocusAsync();
    }

    async Task OnConfirm()
    {
        http.DefaultRequestHeaders.Remove("Key");
        http.DefaultRequestHeaders.Add("Key", input);

        var res = await http.GetAsync("api/Auth");

        if (res.StatusCode is not HttpStatusCode.OK)
        {
            errorVisibility = "visible";
            return;
        }

        auth.Key = input;
        input = null;
    }

    async Task OnKey(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key is "Enter")
        {
            await OnConfirm();
        }
    }
}

