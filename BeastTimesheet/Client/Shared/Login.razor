@using System.Net
@using BeastTimesheet.DesignSystem
@inject HttpClient http
@inject Auth auth

<MainTemplate>
    <Header>Login</Header>
    <Main>
        <div class="grid center fill">
            <div class="grid gap">
                <p>Insert key</p>
                <input type="password" @ref="inputReference" @bind="Input" @bind:event="oninput" @onkeypress="OnKey">
                <AsyncButton OnClick="OnConfirm" State="loginState">
                    <ButtonText>Confirm</ButtonText>
                    <LoadingText>Logging in...</LoadingText>
                    <ErrorText>Login failed!</ErrorText>
                </AsyncButton>
            </div>
        </div>
    </Main>
</MainTemplate>

@code {
    [Parameter]
    public ElementReference inputReference { get; set; }
    AsyncButtonState loginState { get; set; }

    string? input;
    string? Input
    {
        get => input;
        set
        {
            input = value;
            loginState = AsyncButtonState.Ready;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await inputReference.FocusAsync();
    }

    async Task OnConfirm()
    {
        loginState = AsyncButtonState.Loading;

        http.DefaultRequestHeaders.Remove("Key");
        http.DefaultRequestHeaders.Add("Key", input);

        var res = await http.GetAsync("api/Auth");

        if (res.StatusCode is not HttpStatusCode.OK)
        {
            loginState = AsyncButtonState.Error;
            return;
        }

        auth.Key = input;
        input = null;
    }

    async Task OnKey(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key is "Enter")
        {
            await OnConfirm();
        }
    }
}

